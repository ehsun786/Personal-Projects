buildscript {
	ext { springBootVersion = '1.4.1.RELEASE' }
	repositories { mavenCentral() }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework:springloaded:1.2.5.RELEASE")
	}
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'


jar {
	baseName = 'eLearning'
	version = '0.0.2-SNAPSHOT'
}

springBoot { mainClass = "eLearning.ELearningApp" }

repositories { mavenCentral() }


eclipse {
	project {
		name = 'CO2015.eLearning.0.0.2-SNAPSHOT'
		buildCommand 'org.eclipse.jdt.core.javabuilder'
		buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
		buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
		natures 'org.eclipse.jdt.core.javanature', 'org.eclipse.buildship.core.gradleprojectnature', 'org.springframework.ide.eclipse.core.springnature', 'org.eclipse.wst.common.project.facet.core.nature'
	}
}

dependencies {
	// https://mvnrepository.com/artifact/javax.mail/mail
	compile("javax.mail:mail:1.4.1")
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	//	compile("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	// JSP
	compile("org.apache.tomcat.embed:tomcat-embed-jasper:9.0.0.M11")
	compile("javax.servlet:jstl:1.2")
	// cucumber
	testCompile("info.cukes:cucumber-spring:1.2.5")
	testCompile("info.cukes:cucumber-java:1.2.5")
	testCompile("info.cukes:cucumber-junit:1.2.5")
	testCompile("junit:junit:4.11")
	// lombok
	//	compile('org.projectlombok:lombok:1.16.10')
	// bootstrap
	compile("org.webjars:bootstrap:3.3.7")
	// persistence
	compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
	runtime("mysql:mysql-connector-java")
	// security
	compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
	testCompile("org.springframework.security:spring-security-test")
	//	testCompile("org.springframework.security:spring-security-test:4.0.1.RELEASE")


	compile 'com.google.apis:google-api-services-storage:v1-rev98-1.22.0'
	//
	//	compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.2.1'
	compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.99'

	//Multipart file dependency
	compile group: 'commons-io', name: 'commons-io', version: '2.5';
	// https://mvnrepository.com/artifact/org.springframework/spring-context-support
	compile group: 'org.springframework', name: 'spring-context-support', version: '3.2.0.RELEASE'
	compile 'org.springframework:spring-context-support'
	// https://mvnrepository.com/artifact/org.springframework/spring-support
	compile group: 'org.springframework', name: 'spring-support', version: '2.0.6'
	compile("org.springframework.boot:spring-boot-starter-mail")
	// https://mvnrepository.com/artifact/com.googlecode.charts4j/charts4j
	compile group: 'com.googlecode.charts4j', name: 'charts4j', version: '1.3'
}

task wrapper(type: Wrapper) { gradleVersion = '3.0' }

// cucumber
configurations {
	cucumberRuntime { extendsFrom testRuntime }
}

task cucumber() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = "cucumber.api.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			if (project.hasProperty("tags")) {
				args = [
					'--plugin',
					'pretty',
					'--glue',
					'eLearning',
					'src/test/resources',
					'--tags',
					tags
				]
			} else {
				args = [
					'--plugin',
					'pretty',
					'--glue',
					'eLearning',
					'src/test/resources'
				]
			}
		}
	}
}
